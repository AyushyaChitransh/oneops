<% if rfc_cis.present? %>
  <%= section_panel 'Details', :width => 'double', :position => 'right' do %>
    <% list_id = "list_#{random_dom_id}" %>
    <div id="<%= list_id %>" class="rfc-list accordion" id="<%= random_dom_id %>"
         <% if @deployment && @deployment.persisted? %>
           data-changes-url="<%= wo_rfcs_assembly_transition_environment_deployment_path(@assembly, @environment, @deployment) %>"
           data-log-url="<%= log_data_assembly_transition_environment_deployment_path(@assembly, @environment, @deployment) %>"
         <% end %>
    >
      <div class="list-toolbar" list-name="rfc_list_details" filters="ciClass,ciName,cloud,platform" style="margin-bottom: 10px">
        <%= link_to_function(icon('angle-double-up', content_tag(:span, 'Collapse Steps')),
                             'rfc_list_toggle_compact(this, "step")',
                             :class => 'btn btn-mini compact-toggle') %>
        <%= link_to_function(icon('angle-double-up', content_tag(:span, 'Collapse Sections')),
                             'rfc_list_toggle_compact(this, "section")',
                             :class => 'btn btn-mini compact-toggle') %>
        <div class="filter">
          <small><span class="badge badge-info list-count-marker">8</span></small>
          <%= text_field_tag(:filter_list_field, '', :class => 'list-toolbar-filter input-medium search-query', :placeholder => 'type to filter...', :onkeyup => "rfc_list_filter_changed(this, false)") %>
          <i class="fa fa-times-circle" onclick="rfc_list_filter_changed(this, true)"></i>
        </div>
      </div>
      <% rfc_cis.group_by(&:execOrder).sort.each do |exec_order, step_rfcs| %>
        <div class="step">
          <% step_duration = @time_stats && @time_stats[:steps] && @time_stats[:steps][exec_order] %>
          <div class="name" onclick='$j(this).find("i").toggleClass("fa-caret-up fa-caret-down").parents(".step").find(".step-content").toggle(500)'>
            <strong>Step <%= exec_order %></strong>
            <% if step_duration %>
              <small>( <%= time_duration_in_words(step_duration) %> )</small>
            <% end %>
            <%= icon('caret-up') %>
          </div>
          <div class="step-content">
            <% step_rfcs.group_by {|rfc| rfc.nsPath}.sort.each do |ns_path, ns_rfcs| %>
              <% platform_name = ns_path.split('/bom/').last %>
              <% ns_rfcs.group_by {|rfc| rfc.ciClassName}.sort.each do |component_class, class_rfcs| %>
                <% component_type = component_class.split('.').last %>
                <% class_rfcs.group_by {|rfc| rfc.ciName.split('-')[0..-3].join('-')}.sort.each do |component, component_rfcs| %>
                  <% component_rfcs.group_by { |rfc| rfc.ciName.split('-')[-2].to_i }.sort.each do |cloud_id, cloud_rfcs| %>
                    <% cloud = @clouds[cloud_id] %>
                    <div class="cloud-component" ciName="<%= component %>" ciClass="<%= component_class %>" cloud="<%= cloud.ciName %>" platform="<%= platform_name %>">
                      <ul class="inline component rounded shadow white" onclick="if (event.target.tagName.toUpperCase() != 'A') $j(this).next().toggle(300)">
                        <li>
                          <% platform = @platforms[platform_name] %>
                          <% if platform %>
                            <%= image_tag(platform_image_url(platform), :alt => platform_name) %>
                            <%= platform.ciAttributes.pack %>
                            <b><%= platform.ciName %> v<%= platform.ciAttributes.major_version %></b>
                          <% else %>
                            <b><%= platform_name %></b>
                          <% end %>
                        </li>
                        <li>
                          <%= image_tag ci_class_image_url(component_class), :alt => component_type %>
                          <b><%= link_to(component, edit_assembly_transition_environment_platform_component_path(@assembly, @environment, platform, component)) if platform %></b>
                        </li>
                        <li class="pull-right">
                          <%= icon('cloud', link_to(cloud ? link_to(cloud.ciName, edit_cloud_path(cloud)) : cloud_id)) %>
                          <% cloud_deployment_state_summary = cloud_rfcs.group_by{|rfc_ci| rfc_ci.deployment.dpmtRecordState}
                             cloud_deployment_state = ''
                             %w(failed canceled pending complete).each do |s|
                               if cloud_deployment_state_summary[s]
                                 cloud_deployment_state = s
                                 break
                               end
                             end %>
                          &nbsp;
                          <%= rfc_state_icon(cloud_deployment_state) %></li>
                      </ul>
                      <ul class="rfc">
                        <% cloud_rfcs.each do |rfc_ci| %>
                          <% rfc_id = rfc_ci.rfcId %>
                          <li class="rfc" data-bom-rfc-id="<%= rfc_id %>">
                            <div class="accordion-group">
                              <div class="accordion-heading">
                                <div class="accordion-toggle">
                                  <% rfc_time_stats = @time_stats.present? && @time_stats[:rfcs][rfc_id]
                                     total_time = rfc_time_stats && rfc_time_stats['totalTime']
                                     deployment_record_state = rfc_ci.deployment.dpmtRecordState %>
                                  <span>
                                    <%= rfc_action_icon(rfc_ci.rfcAction, 'fa-lg') %>&nbsp;&nbsp;
                                    <strong>
                                      <% if (deployment_record_state != 'complete' && rfc_ci.rfcAction == 'add') || (deployment_record_state == 'complete' && rfc_ci.rfcAction == 'delete') %>
                                        <%= rfc_ci.ciName %>
                                      <% else %>
                                        <%= link_to(rfc_ci.ciName, path_to_ci(rfc_ci)) %>
                                      <% end %>
                                    </strong>
                                  </span>
                                  <ul class="nav inline pull-right">
                                    <li><a onclick="toggle_rfc_tab(this, '<%= rfc_id %>', 'changes')">Changes</a></li>
                                    <% unless deployment_record_state == 'pending' %>
                                      <li class="log-tab-trigger"><a onclick="toggle_rfc_tab(this, '<%= rfc_id %>', 'log')">Log</a></li>
                                    <% end %>
                                    <li></li>
                                    <li>
                                      <% if total_time %>
                                        <small class="rfc-duration"><a onclick="toggle_rfc_tab(this, '<%= rfc_id %>', 'stats')"><%= time_duration_in_words(total_time.to_f * 1000) %></a></small>
                                      <% end %>
                                      <%= rfc_state_icon(deployment_record_state, 'fa-lg') %>
                                    </li>
                                  </ul>
                                </div>
                              </div>
                              <div class="accordion-inner" data-rfc-id="<%= rfc_id %>" style="display:none">
                                <div class="tab-pane rfc-changes"></div>
                                <div class="tab-pane rfc-log"></div>
                                <div class="tab-pane rfc-stats"><%= hash_list(rfc_time_stats) if rfc_time_stats %></div>
                              </div>
                            </div>
                          </li>
                        <% end %>
                      </ul>
                    </div>
                  <% end %>
                <% end %>
              <% end %>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
    <script type="text/javascript">
      <%= render 'cms/rfcs/rfc' %>

      if (!window.rfc_list_filter_changed) {
        window.rfc_list_filter_changed = function (el, clear) {
          var listDiv = $j(el).closest(".rfc-list");
          var filterField = listDiv.find(".list-toolbar-filter");

          if (clear) {
            filterField.val("");
          }

          var value = filterField.val();
          rfc_list_apply_list_filter(listDiv, value)
          window.rfc_list_filter = value;
        };

        window.rfc_list_set_list_filter = function (list, value) {
          if (list) {
            list = $j(list);
            list.find(".list-toolbar-filter").val(value);
            rfc_list_apply_list_filter(list, value);
          }
        };

        window.rfc_list_apply_list_filter = function (list, value) {
          filter_list(list.find("div.cloud-component"), list.find(".list-toolbar").attr("filters").split(","), value);
          rfc_list_update_filter_marker(list);
        };

        window.rfc_list_update_filter_marker = function(list) {
          list = $j(list);
          list.find(".list-count-marker").html(list.find("div.cloud-component:visible ul.rfc>li").length);
        };

        window.rfc_list_toggle_compact = function (source, target) {
          var btn = $j(source);
          var i = btn.find("i");
          var expanding = i.hasClass("fa-angle-double-down");
          var span = i.siblings("span");
          span.html(expanding ? span.html().replace("Expand", "Collapse") : span.html().replace("Collapse", "Expand"));
          i.toggleClass("fa-angle-double-down fa-angle-double-up");
          var items = btn.parents(".rfc-list").find(".step-content" + (target === "section" ? " ul.rfc" : ""));
          if (expanding) {
            items.show();
          }
          else {
            items.hide();
          }
        };
      }

      (function () {
        var list = $j("#<%= list_id %>");
        rfc_list_update_filter_marker(list);
        if (window.rfc_list_filter) rfc_list_set_list_filter(list, window.rfc_list_filter);
        var filter_field = list.find(".list-toolbar-filter");
        var taItems = list.find(".list-toolbar").attr("filters").split(",");
        filter_field.typeahead({items: 15,
                                source:  function(query, process) {
                                  var val = query.split(/\s/).last();
                                  if (!val || val.indexOf('=') > 0) {
                                    return [];
                                  }
                                  var items = taItems.filter(function (i) {return i.startsWith(val);});
                                  if (items.length) {
                                    items = items.map(function(i) {return i + "=";})
                                  }
                                  else {
                                    items = taItems.map(function(i) {return i + "=" + val;});
                                    items.unshift(val);
                                  }
                                  return items;
                                },
                                matcher: function (item) {
                                  return true;
                                },
                                sorter: function(items) {
                                  var query = this.query;
                                  return items.sort(function(a, b) {
                                    return a == query ? -1 : (b == query ? 1 : a.localeCompare(b));
                                  });
                                },
                                highlighter: function (item) {
                                  var split = item.split('=');
                                  return split.length > 1 ? "<small><em>" + split[0] + "=</em></small>" + split[1] : item;
                                },
                                updater: function (item) {
                                  var val = this.$element.val();
                                  var term = val.split(/\s/).last();
                                  setTimeout(function () {
                                    rfc_list_filter_changed(filter_field[0]);
                                  }, 10);
                                  return val.substring(0, val.length - term.length) + item;
                                }});
      })();
    </script>
  <% end %>
<% end %>
